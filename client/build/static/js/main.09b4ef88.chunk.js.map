{"version":3,"sources":["logo.svg","components/DeleteBtn/index.js","components/Grid/index.js","components/List/index.js","utils/API.js","pages/Saved.jsx","components/Jumbotron/index.js","components/Form/index.js","pages/Search.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","DeleteBtn","props","className","role","tabIndex","Container","fluid","children","Row","Col","size","split","map","join","List","ListItem","searchTerm","axios","get","id","delete","bookData","post","Saved","useState","book","setBook","deleteBook","API","then","res","data","catch","err","console","log","useParams","useEffect","bookie","key","_id","href","link","target","title","authors","onClick","to","Jumbotron","style","height","clear","paddingTop","textAlign","Input","FormBtn","float","marginBottom","Search","books","setBooks","formObject","setFormObject","loadBooks","handleFormSubmit","event","preventDefault","description","name","value","attributes","getNamedItem","infolink","author","image","onChange","placeholder","items","length","volumeInfo","infoLink","undefined","src","imageLinks","thumbnail","data-title","data-description","data-infolink","data-author","data-image","data-value","Nav","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"mLAAAA,EAAOC,QAAU,IAA0B,kC,qICa5BC,MARf,SAAmBC,GACjB,OACE,wCAAMC,UAAU,cAAiBD,EAAjC,CAAwCE,KAAK,SAASC,SAAS,MAA/D,WCFG,SAASC,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACjC,OAAO,yBAAKL,UAAS,mBAAcI,EAAQ,SAAW,KAAOC,GAIxD,SAASC,EAAT,GAAmC,IAApBF,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC3B,OAAO,yBAAKL,UAAS,aAAQI,EAAQ,SAAW,KAAOC,GAKlD,SAASE,EAAT,GAAkC,IAAnBC,EAAkB,EAAlBA,KAAMH,EAAY,EAAZA,SAC1B,OACE,yBACEL,UAAWQ,EACRC,MAAM,KACNC,KAAI,SAAAF,GAAI,MAAI,OAASA,KACrBG,KAAK,MAEPN,G,MCnBA,SAASO,EAAT,GAA6B,IAAbP,EAAY,EAAZA,SACrB,OACE,yBAAKL,UAAU,2BACb,wBAAIA,UAAU,cAAcK,IAK3B,SAASQ,EAAT,GAAiC,IAAbR,EAAY,EAAZA,SACzB,OAAO,wBAAIL,UAAU,mBAAmBK,G,oBCG3B,EACC,SAASS,GACjB,OAAOC,IAAMC,IAXL,iDAWmBF,IAFpB,EAKD,WACR,OAAOC,IAAMC,IAAI,eANR,EAaC,SAASC,GACnB,OAAOF,IAAMG,OAAO,cAAgBD,IAd3B,EAiBD,SAASE,GACjB,OAAOJ,IAAMK,KAAK,aAAcD,IC2DvBE,MAtFf,SAAetB,GAAQ,IAAD,EACMuB,mBAAS,IADf,mBACXC,EADW,KACLC,EADK,KAalB,SAASC,EAAWR,GAChBS,EAAeT,GACVU,MAAK,SAAAC,GAMVF,IACKC,MAAK,SAAAC,GAAG,OAELJ,EAAQI,EAAIC,SAEfC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAVzBD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAclC,OAzBeG,cAAPjB,GACRkB,qBAAU,WACNT,IACKC,MAAK,SAAAC,GAAG,OAAIJ,EAAQI,EAAIC,SACxBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC/B,IAqBC,kBAAC5B,EAAD,CAAWC,OAAK,GACZ,kBAACE,EAAD,KACI,kBAACC,EAAD,CAAKC,KAAK,WAQd,kBAACF,EAAD,KACI,kBAACC,EAAD,CAAKC,KAAK,qBAGN,kBAACI,EAAD,KACKW,EAAKb,KAAI,SAAA0B,GAAM,OACZ,kBAACvB,EAAD,CAAUwB,IAAKD,EAAOE,KAElB,gCAEI,uBAAGC,KAAMH,EAAOI,KAAMC,OAAO,UACxBL,EAAOM,MADZ,OACuBN,EAAOO,UAMlC,kBAAC,EAAD,CAAWC,QAAS,kBAAMnB,EAAWW,EAAOE,eAkBhE,kBAAChC,EAAD,KACI,kBAACC,EAAD,CAAKC,KAAK,QACN,kBAAC,IAAD,CAAMqC,GAAG,KAAT,8B,gBCzELC,MAXf,YAAkC,IAAbzC,EAAY,EAAZA,SACnB,OACE,yBACE0C,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,IAAKC,UAAW,UACjEnD,UAAU,aAETK,ICJA,SAAS+C,EAAMrD,GACpB,OACE,yBAAKC,UAAU,cACb,yCAAOA,UAAU,gBAAmBD,KAanC,SAASsD,EAAQtD,GACtB,OACE,4CAAYA,EAAZ,CAAmBgD,MAAO,CAAEO,MAAO,QAASC,aAAc,IAAMvD,UAAU,oBACvED,EAAMM,UCiKEmD,MA9Kf,WAAkB,MAEYlC,mBAAS,IAFrB,mBAEPmC,EAFO,KAEAC,EAFA,OAGsBpC,mBAAS,IAH/B,mBAGPqC,EAHO,KAGKC,EAHL,KAWd,SAASC,IACLnC,IACKC,MAAK,SAAAC,GACFP,EAAMwC,UAAUjC,EAAIC,SAGvBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAkBlC,SAAS+B,EAAiBC,GACtBA,EAAMC,iBADuB,MAELD,EAAMtB,OAExBwB,GAJuB,EAErBC,KAFqB,EAEfC,MAEMJ,EAAMtB,OAAO2B,WAAWC,aAAa,oBAAoBF,OACvEzB,EAAQqB,EAAMtB,OAAO2B,WAAWC,aAAa,cAAcF,MAC3DG,EAAWP,EAAMtB,OAAO2B,WAAWC,aAAa,iBAAiBF,MACjEI,EAASR,EAAMtB,OAAO2B,WAAWC,aAAa,eAAeF,MAC7DK,EAAQT,EAAMtB,OAAO2B,WAAWC,aAAa,cAAcF,MAkBjEzC,EAAa,CACTgB,MAAOA,EACPC,QAAS4B,EACTC,MAAOA,EACPP,YAAaA,EACbzB,KAAM8B,IAGL3C,MAAK,SAAAC,GAAG,OAAIiC,OACZ/B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAsBlC,OAtFAI,qBAAU,cAEP,IAqFC,kBAAChC,EAAD,CAAWC,OAAK,GACZ,kBAACE,EAAD,KACI,kBAACC,EAAD,CAAKC,KAAK,QACN,kBAAC,EAAD,KACI,mDAEJ,8BACI,kBAAC4C,EAAD,CACIqB,SAzExB,SAA2BV,GAAQ,IAAD,EACNA,EAAMtB,OAAtByB,EADsB,EACtBA,KAAMC,EADgB,EAChBA,MACdP,EAAc,2BAAKD,GAAN,kBAAmBO,EAAOC,MAwEnBD,KAAK,QACLQ,YAAY,qBAYhB,kBAACrB,EAAD,CAEIT,QA3CxB,SAA0BmB,GACtBA,EAAMC,iBAENtC,EAAeiC,EAAWjB,OAMrBf,MAAK,SAAAC,GACFI,QAAQC,IAAIL,GACZI,QAAQC,IAAIL,EAAI+C,OAChBjB,EAAS9B,EAAIC,KAAK8C,UAErB7C,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QA2Bd,iBAQR,kBAACxB,EAAD,CAAKC,KAAK,cACN,kBAAC,EAAD,KACI,sDAEHiD,EAAMmB,OACH,kBAAChE,EAAD,KACK6C,EAAM/C,KAAI,SAAAa,GAAI,OACX,kBAACV,EAAD,CAAUwB,IAAKd,EAAKN,GAAIsB,KAAMhB,EAAKsD,WAAWC,SAAUrC,OAAO,UAE3D,qCAEqCsC,IAA7BxD,EAAKsD,WAAWC,SAA2B,uBAAGvC,KAAMhB,EAAKsD,WAAWC,SAAUrC,OAAO,UAChFlB,EAAKsD,WAAWnC,MADsB,OACXnB,EAAKsD,WAAWlC,QAAUpB,EAAKsD,WAAWlC,QAAQ,GAAK,IAC/E,WAKfpB,EAAKsD,WAAWZ,YACjB,6BACA,yBAAKe,IAAKzD,EAAKsD,WAAWI,WAAWC,UAAY3D,EAAKsD,WAAWI,WAAWC,UAAY,KACxF,6BACA,4BACIC,aAAY5D,EAAKsD,WAAWnC,MAC5B0C,mBAAkB7D,EAAKsD,WAAWZ,YAAc1C,EAAKsD,WAAWZ,YAAc,GAC9EoB,gBAAe9D,EAAKsD,WAAWC,SAAWvD,EAAKsD,WAAWC,SAAW,GACrEQ,cAAa/D,EAAKsD,WAAWlC,QAAUpB,EAAKsD,WAAWlC,QAAQ,GAAK,GACpE4C,aAAYhE,EAAKsD,WAAWI,WAAWC,UAAY3D,EAAKsD,WAAWI,WAAWC,UAAY,GAC1FM,aAAYjE,EAAKsD,WACjBjC,QAASkB,GAPb,oBAeR,yD,YC9Ib2B,MAzBf,WACE,OACE,yBAAKzF,UAAU,kDAEb,kBAAC,IAAD,CAAMA,UAAU,eACR6C,GAAG,WADX,sBAQA,kBAAC,IAAD,CAAM7C,UAAU,eACR6C,GAAG,UADX,uBC8BS6C,MApCf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,CAAC,IAAK,YACvB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAM,CAAC,IAAK,0BACvB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAM,CAAC,WAClB,kBAAC,EAAD,WCZQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.09b4ef88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import axios from \"axios\";\r\n// AIzaSyC7S5uOXG1DVFHgYJS40Gt3Tx1eI7SVBl0 api key\r\n//https://www.googleapis.com/books/v1/volumes?q=quilting\r\n// key=yourAPIKey\r\n//https://www.googleapis.com/books/v1/volumes?q=search+terms\r\n// import axios from \"axios\";\r\n//https://www.googleapis.com/books/v1/volumes?q=flowers+inauthor:keyes&key=yourAPIKey\r\n//+inauthor:keyes&key=yourAPIKey\r\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\"; //?key=AIzaSyC7S5uOXG1DVFHgYJS40Gt3Tx1eI7SVBl0\";\r\nconst rest = \"\";\r\n\r\n// export default {\r\n//   search: function(query) {\r\n//     return axios.get(BASEURL);\r\n//   }\r\n// };\r\n\r\nexport default {\r\n    searchBook: function(searchTerm) {\r\n        return axios.get(BASEURL + searchTerm + rest);\r\n    },\r\n    // Gets all books\r\n    getBooks: function() {\r\n      return axios.get(\"/api/books\");\r\n    },\r\n    // Gets the book with the given id\r\n    getBook: function(id) {\r\n      return axios.get(\"/api/books/\" + id);\r\n    },\r\n    // Deletes the book with the given id\r\n    deleteBook: function(id) {\r\n      return axios.delete(\"/api/books/\" + id);\r\n    },\r\n    // Saves a book to the database\r\n    saveBook: function(bookData) {\r\n      return axios.post(\"/api/books\", bookData);\r\n    }\r\n  };\r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\n//import Jumbotron from \"../components/Jumbotron\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport API from \"../utils/API\";\r\n\r\nfunction Saved(props) {\r\n    const [book, setBook] = useState([])\r\n\r\n    // When this component mounts, grab the book with the _id of props.match.params.id\r\n    // e.g. localhost:3000/books/599dcb67f0f16317844583fc\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        API.getBooks()\r\n            .then(res => setBook(res.data))\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    // Deletes a book from the database with a given id, then reloads books from the db\r\n    function deleteBook(id) {\r\n        API.deleteBook(id)\r\n            .then(res => loadBooks())\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    // Loads all books and sets them to books\r\n    function loadBooks() {\r\n        API.getBooks()\r\n            .then(res =>\r\n\r\n                setBook(res.data)\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col size=\"md-12\">\r\n                    {/* <Jumbotron>\r\n              <h1>\r\n                {book.title} by {book.author}\r\n              </h1>\r\n            </Jumbotron> */}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col size=\"md-10 md-offset-1\">\r\n\r\n                    {/* {book.length ? ( */}\r\n                    <List>\r\n                        {book.map(bookie => (\r\n                            <ListItem key={bookie._id}>\r\n                                {/* <Link to={\"/books/\" + bookie._id}> */}\r\n                                <strong>\r\n\r\n                                    <a href={bookie.link} target=\"_blank\">\r\n                                        {bookie.title} by {bookie.authors}\r\n                                    </a>\r\n\r\n                                </strong>\r\n                                {/* </Link> */}\r\n                                {/* <LookupBtn onClick={() => deleteBook(bookie._id)} /> */}\r\n                                <DeleteBtn onClick={() => deleteBook(bookie._id)} />\r\n                                {/* <LookupBtn onClick={() => deleteBook(bookie.id)} /> */}\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    {/* ) : (\r\n                             <h3>No Results to Display</h3>\r\n                         )} */}\r\n\r\n\r\n                    {/* <article>\r\n              <h1>Synopsis</h1>\r\n              <p>\r\n                {book.synopsis}\r\n              </p>\r\n            </article> */}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col size=\"md-2\">\r\n                    <Link to=\"/\">← Back to Authors</Link>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nexport default Saved;\r\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport LookupBtn from \"../components/LookupBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link as a } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\nimport Saved from './Saved';\r\n\r\nfunction Search() {\r\n    // Setting our component's initial state\r\n    const [books, setBooks] = useState([])\r\n    const [formObject, setFormObject] = useState({})\r\n\r\n    // Load all books and store them with setBooks\r\n    useEffect(() => {\r\n        // loadBooks()\r\n    }, [])\r\n\r\n    // Loads all books and sets them to books\r\n    function loadBooks() {\r\n        API.getBooks()\r\n            .then(res => {\r\n                Saved.loadBooks(res.data);\r\n\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    // Deletes a book from the database with a given id, then reloads books from the db\r\n    function deleteBook(id) {\r\n        API.deleteBook(id)\r\n            .then(res => loadBooks())\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    // Handles updating component state when the user types into the input field\r\n    function handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        setFormObject({ ...formObject, [name]: value })\r\n    };\r\n\r\n    // When the form is submitted, use the API.saveBook method to save the book data\r\n    // Then reload books from the database\r\n    function handleFormSubmit(event) {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        //const title = event.target.dataValues[\"data-title\"];\r\n        const description = event.target.attributes.getNamedItem(\"data-description\").value;\r\n        const title = event.target.attributes.getNamedItem(\"data-title\").value;\r\n        const infolink = event.target.attributes.getNamedItem(\"data-infolink\").value;\r\n        const author = event.target.attributes.getNamedItem(\"data-author\").value;\r\n        const image = event.target.attributes.getNamedItem(\"data-image\").value;\r\n\r\n        // data-title={book.volumeInfo.title}\r\n        // data-description={book.volumeInfo.description}\r\n        // data-infolink={book.volumeInfo.infoLink}\r\n        // data-author={book.volumeInfo.authors[0]}\r\n        // data-image={book.volumeInfo.imageLinks.thumbnail}\r\n\r\n\r\n        //.data('key').key;\r\n\r\n\r\n        //         authors: { type: String, required: true },\r\n        //   description: {type: String, default: \"\"},\r\n        //   image: {type: String, default: \"www.cnn.com\"},\r\n        //   link: {type: String, default: \"\"},\r\n        //   title: { type: String, required: true }\r\n        //if (formObject.title && formObject.author) {\r\n        API.saveBook({\r\n            title: title,\r\n            authors: author,\r\n            image: image,\r\n            description: description,\r\n            link: infolink,\r\n            //synopsis: formObject.synopsis\r\n        })\r\n            .then(res => loadBooks())\r\n            .catch(err => console.log(err));\r\n        //}\r\n    };\r\n\r\n    function handleFormSearch(event) {\r\n        event.preventDefault();\r\n        //if (formObject.title && formObject.author) {\r\n        API.searchBook(formObject.title)\r\n            // API.saveBook({\r\n            //     title: formObject.title,\r\n            //     author: formObject.author\r\n            //     //synopsis: formObject.synopsis\r\n            // })\r\n            .then(res => {\r\n                console.log(res);\r\n                console.log(res.items);\r\n                setBooks(res.data.items);\r\n            })\r\n            .catch(err => console.log(err));\r\n        //}\r\n    };\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col size=\"md-6\">\r\n                    <Jumbotron>\r\n                        <h1>Google book lookup</h1>\r\n                    </Jumbotron>\r\n                    <form>\r\n                        <Input\r\n                            onChange={handleInputChange}\r\n                            name=\"title\"\r\n                            placeholder=\"Title (required)\"\r\n                        />\r\n                        {/* <Input\r\n                onChange={handleInputChange}\r\n                name=\"author\"\r\n                placeholder=\"Author (required)\"\r\n              /> */}\r\n                        {/* <TextArea\r\n                            //onChange={handleInputChange}\r\n                            name=\"synopsis\"\r\n                            placeholder=\"Synopsis (Optional)\"\r\n                        /> */}\r\n                        <FormBtn\r\n                            // disabled={!(formObject.author && formObject.title)}\r\n                            onClick={handleFormSearch}\r\n                        >\r\n                            Submit Book\r\n                         </FormBtn>\r\n                    </form>\r\n                </Col>\r\n                <Col size=\"md-6 sm-12\">\r\n                    <Jumbotron>\r\n                        <h1>Google Books returned</h1>\r\n                    </Jumbotron>\r\n                    {books.length ? (\r\n                        <List>\r\n                            {books.map(book => (\r\n                                <ListItem key={book.id} href={book.volumeInfo.infoLink} target=\"_blank\">\r\n\r\n                                    <strong>\r\n                                        {\r\n                                            book.volumeInfo.infoLink !== undefined ? ( <a href={book.volumeInfo.infoLink} target=\"_blank\">\r\n                                                {book.volumeInfo.title} by {book.volumeInfo.authors ? book.volumeInfo.authors[0] : \"\"}\r\n                                            </a>) : \"_target\"\r\n                                        }\r\n\r\n                                    </strong>\r\n\r\n                                    {book.volumeInfo.description}\r\n                                    <br />\r\n                                    <img src={book.volumeInfo.imageLinks.thumbnail ? book.volumeInfo.imageLinks.thumbnail : \"\" } />\r\n                                    <br />\r\n                                    <button\r\n                                        data-title={book.volumeInfo.title}\r\n                                        data-description={book.volumeInfo.description ? book.volumeInfo.description : \"\" }\r\n                                        data-infolink={book.volumeInfo.infoLink ? book.volumeInfo.infoLink : \"\" }\r\n                                        data-author={book.volumeInfo.authors ? book.volumeInfo.authors[0] : \"\"}\r\n                                        data-image={book.volumeInfo.imageLinks.thumbnail ? book.volumeInfo.imageLinks.thumbnail : \"\"}\r\n                                        data-value={book.volumeInfo}\r\n                                        onClick={handleFormSubmit}\r\n                                    >\r\n                                        Submit Book\r\n                                    </button>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    ) : (\r\n                            <h3>No Results to Display</h3>\r\n                        )}\r\n                    {/* <ListItem key={books.id}>\r\n                        <strong>\r\n                            {books.title} by {books.author}\r\n                        </strong>\r\n                    </ListItem> */}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      {/* <a className=\"navbar-brand\" href=\"/\"> */}\n      <Link className=\"navbar-brand\"\n              to=\"/Search\"\n            >\n              Google Book Search\n            </Link>\n        \n      {/* </a> */}\n      {/* <a className=\"navbar-brand\" href=\"/\"> */}\n      <Link className=\"navbar-brand\"\n              to=\"/Saved\"\n            >\n              Go to Saved Books\n            </Link>\n        \n      {/* </a> */}\n\n      \n    </nav>\n  );\n}\n\nexport default Nav;\n","//import React from \"react\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Saved from \"./pages/Saved\";\nimport Search from \"./pages/Search\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path={[\"/\", \"/Search\"]}>\n            <Search />\n          </Route>\n          <Route exact path={[\"/\", \"/21_GoogleBooksSearch\"]}>\n            <Search />\n          </Route>\n          <Route exact path={[\"/Saved\"]}>\n            <Saved >\n\n            </Saved>\n          </Route>\n        </Switch>\n      </div>\n\n    </Router>\n\n\n    // <div className=\"App\">\n    //   <div className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <h2>Welcome to React</h2>\n    //   </div>\n    //   <p className=\"App-intro\">\n    //     To get started, edit <code>src/App.js</code> and save to reload.\n    //   </p>\n    // </div>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// registerServiceWorker();\n"],"sourceRoot":""}